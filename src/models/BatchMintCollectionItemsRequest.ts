/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.4.2
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BatchMintCollectionItemsRequest
 */
export interface BatchMintCollectionItemsRequest {
    /**
     * A valid EVM based address to create (mint) the items for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`.
     * @type {string}
     * @memberof BatchMintCollectionItemsRequest
     */
    address?: string;
    /**
     * An array of unique itemIds to create (mint).
     * @type {Array<number>}
     * @memberof BatchMintCollectionItemsRequest
     */
    itemIds: Array<number>;
    /**
     * An array of the quantities of each of the unique itemIds provided to create (mint). The quantity of each itemId in itemIds should be at the same index as the specific itemId in the itemIds array. For example, quantities[2] defines the quantity to mint for itemIds[2], etc.
     * @type {Array<number>}
     * @memberof BatchMintCollectionItemsRequest
     */
    quantities: Array<number>;
    /**
     * Any wallet id within the MetaFab ecosystem to create (mint) the items for.
     * @type {string}
     * @memberof BatchMintCollectionItemsRequest
     */
    walletId?: string;
}

/**
 * Check if a given object implements the BatchMintCollectionItemsRequest interface.
 */
export function instanceOfBatchMintCollectionItemsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "itemIds" in value;
    isInstance = isInstance && "quantities" in value;

    return isInstance;
}

export function BatchMintCollectionItemsRequestFromJSON(json: any): BatchMintCollectionItemsRequest {
    return BatchMintCollectionItemsRequestFromJSONTyped(json, false);
}

export function BatchMintCollectionItemsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchMintCollectionItemsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': !exists(json, 'address') ? undefined : json['address'],
        'itemIds': json['itemIds'],
        'quantities': json['quantities'],
        'walletId': !exists(json, 'walletId') ? undefined : json['walletId'],
    };
}

export function BatchMintCollectionItemsRequestToJSON(value?: BatchMintCollectionItemsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'itemIds': value.itemIds,
        'quantities': value.quantities,
        'walletId': value.walletId,
    };
}

