/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateEcosystemRequest
 */
export interface CreateEcosystemRequest {
    /**
     * The name of the ecosystem you're creating.
     * @type {string}
     * @memberof CreateEcosystemRequest
     */
    name: string;
    /**
     * The email address associated with this ecosystem and used to login/authenticate as the ecosystem.
     * @type {string}
     * @memberof CreateEcosystemRequest
     */
    email: string;
    /**
     * The password to authenticate as the ecosystem.
     * @type {string}
     * @memberof CreateEcosystemRequest
     */
    password: string;
}

/**
 * Check if a given object implements the CreateEcosystemRequest interface.
 */
export function instanceOfCreateEcosystemRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "password" in value;

    return isInstance;
}

export function CreateEcosystemRequestFromJSON(json: any): CreateEcosystemRequest {
    return CreateEcosystemRequestFromJSONTyped(json, false);
}

export function CreateEcosystemRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEcosystemRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'password': json['password'],
    };
}

export function CreateEcosystemRequestToJSON(value?: CreateEcosystemRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'password': value.password,
    };
}

