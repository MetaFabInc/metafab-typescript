/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfilePermissionsValue } from './ProfilePermissionsValue';
import {
    ProfilePermissionsValueFromJSON,
    ProfilePermissionsValueFromJSONTyped,
    ProfilePermissionsValueToJSON,
} from './ProfilePermissionsValue';

/**
 * 
 * @export
 * @interface CreateProfilePlayerRequest
 */
export interface CreateProfilePlayerRequest {
    /**
     * The username to assign to the created player.
     * @type {string}
     * @memberof CreateProfilePlayerRequest
     */
    username: string;
    /**
     * A properly formatted permissions object that validates against the MetaFab profile permissions schema.
     * @type {{ [key: string]: ProfilePermissionsValue; }}
     * @memberof CreateProfilePlayerRequest
     */
    permissions?: { [key: string]: ProfilePermissionsValue; };
}

/**
 * Check if a given object implements the CreateProfilePlayerRequest interface.
 */
export function instanceOfCreateProfilePlayerRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function CreateProfilePlayerRequestFromJSON(json: any): CreateProfilePlayerRequest {
    return CreateProfilePlayerRequestFromJSONTyped(json, false);
}

export function CreateProfilePlayerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateProfilePlayerRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': json['username'],
        'permissions': !exists(json, 'permissions') ? undefined : (mapValues(json['permissions'], ProfilePermissionsValueFromJSON)),
    };
}

export function CreateProfilePlayerRequestToJSON(value?: CreateProfilePlayerRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'permissions': value.permissions === undefined ? undefined : (mapValues(value.permissions, ProfilePermissionsValueToJSON)),
    };
}

