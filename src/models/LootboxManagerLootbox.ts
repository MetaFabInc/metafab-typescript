/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LootboxManagerLootbox
 */
export interface LootboxManagerLootbox {
    /**
     * The id of this lootbox.
     * @type {number}
     * @memberof LootboxManagerLootbox
     */
    id?: number;
    /**
     * The address of the ERC1155 or MetaFab game items contract for input items required by this lootbox.
     * @type {string}
     * @memberof LootboxManagerLootbox
     */
    inputCollection?: string;
    /**
     * An array of item ids from the input collection that are required for this lootbox.
     * @type {Array<number>}
     * @memberof LootboxManagerLootbox
     */
    inputCollectionItemIds?: Array<number>;
    /**
     * An array of amounts for each item id for the input collection that are required to open this lootbox.
     * @type {Array<number>}
     * @memberof LootboxManagerLootbox
     */
    inputCollectionItemAmounts?: Array<number>;
    /**
     * The address of the ERC1155 of MetaFab game items contract for possible output items given by this lootbox.
     * @type {string}
     * @memberof LootboxManagerLootbox
     */
    outputCollection?: string;
    /**
     * An array of item ids from the output collection that are possibly given by this lootbox.
     * @type {Array<number>}
     * @memberof LootboxManagerLootbox
     */
    outputCollectionItemIds?: Array<number>;
    /**
     * An array of amounts for each item id for the output collection that are possibly given by this lootbox.
     * @type {Array<number>}
     * @memberof LootboxManagerLootbox
     */
    outputCollectionItemAmounts?: Array<number>;
    /**
     * An array of weights for each item id for the output collection that are possibly given by this lootbox.
     * @type {Array<number>}
     * @memberof LootboxManagerLootbox
     */
    outputCollectionItemWeights?: Array<number>;
    /**
     * The number of items randomly selected when this lootbox is opened.
     * @type {number}
     * @memberof LootboxManagerLootbox
     */
    outputTotalItems?: number;
    /**
     * A unix timestamp in seconds that represents the last time this offer was set or updated.
     * @type {number}
     * @memberof LootboxManagerLootbox
     */
    lastUpdatedAt?: number;
}

/**
 * Check if a given object implements the LootboxManagerLootbox interface.
 */
export function instanceOfLootboxManagerLootbox(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LootboxManagerLootboxFromJSON(json: any): LootboxManagerLootbox {
    return LootboxManagerLootboxFromJSONTyped(json, false);
}

export function LootboxManagerLootboxFromJSONTyped(json: any, ignoreDiscriminator: boolean): LootboxManagerLootbox {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'inputCollection': !exists(json, 'inputCollection') ? undefined : json['inputCollection'],
        'inputCollectionItemIds': !exists(json, 'inputCollectionItemIds') ? undefined : json['inputCollectionItemIds'],
        'inputCollectionItemAmounts': !exists(json, 'inputCollectionItemAmounts') ? undefined : json['inputCollectionItemAmounts'],
        'outputCollection': !exists(json, 'outputCollection') ? undefined : json['outputCollection'],
        'outputCollectionItemIds': !exists(json, 'outputCollectionItemIds') ? undefined : json['outputCollectionItemIds'],
        'outputCollectionItemAmounts': !exists(json, 'outputCollectionItemAmounts') ? undefined : json['outputCollectionItemAmounts'],
        'outputCollectionItemWeights': !exists(json, 'outputCollectionItemWeights') ? undefined : json['outputCollectionItemWeights'],
        'outputTotalItems': !exists(json, 'outputTotalItems') ? undefined : json['outputTotalItems'],
        'lastUpdatedAt': !exists(json, 'lastUpdatedAt') ? undefined : json['lastUpdatedAt'],
    };
}

export function LootboxManagerLootboxToJSON(value?: LootboxManagerLootbox | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'inputCollection': value.inputCollection,
        'inputCollectionItemIds': value.inputCollectionItemIds,
        'inputCollectionItemAmounts': value.inputCollectionItemAmounts,
        'outputCollection': value.outputCollection,
        'outputCollectionItemIds': value.outputCollectionItemIds,
        'outputCollectionItemAmounts': value.outputCollectionItemAmounts,
        'outputCollectionItemWeights': value.outputCollectionItemWeights,
        'outputTotalItems': value.outputTotalItems,
        'lastUpdatedAt': value.lastUpdatedAt,
    };
}

