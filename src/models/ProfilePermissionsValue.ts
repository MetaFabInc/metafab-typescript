/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Key should be the contract address, value is the permissions object request for the contract.
 * @export
 * @interface ProfilePermissionsValue
 */
export interface ProfilePermissionsValue {
    /**
     * The target chain for the contract and related permissions.
     * @type {string}
     * @memberof ProfilePermissionsValue
     */
    chain?: string;
    /**
     * An optional array of valid permissioning scopes.
     * @type {Array<string>}
     * @memberof ProfilePermissionsValue
     */
    scopes?: Array<string>;
    /**
     * An optional array of contract functions to request permission for.
     * @type {Array<string>}
     * @memberof ProfilePermissionsValue
     */
    functions?: Array<string>;
    /**
     * A maximum lifetime limit of erc20 that can be tranferred for this contract address.
     * @type {number}
     * @memberof ProfilePermissionsValue
     */
    erc20Limit?: number;
    /**
     * An object mapping erc1155 ids to maximum lifetime transfer limits of each permitted item id supplied for this contract address.
     * @type {{ [key: string]: number; }}
     * @memberof ProfilePermissionsValue
     */
    erc1155Limits?: { [key: string]: number; };
}

/**
 * Check if a given object implements the ProfilePermissionsValue interface.
 */
export function instanceOfProfilePermissionsValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfilePermissionsValueFromJSON(json: any): ProfilePermissionsValue {
    return ProfilePermissionsValueFromJSONTyped(json, false);
}

export function ProfilePermissionsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfilePermissionsValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chain': !exists(json, 'chain') ? undefined : json['chain'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'functions': !exists(json, 'functions') ? undefined : json['functions'],
        'erc20Limit': !exists(json, 'erc20Limit') ? undefined : json['erc20Limit'],
        'erc1155Limits': !exists(json, 'erc1155Limits') ? undefined : json['erc1155Limits'],
    };
}

export function ProfilePermissionsValueToJSON(value?: ProfilePermissionsValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chain': value.chain,
        'scopes': value.scopes,
        'functions': value.functions,
        'erc20Limit': value.erc20Limit,
        'erc1155Limits': value.erc1155Limits,
    };
}

