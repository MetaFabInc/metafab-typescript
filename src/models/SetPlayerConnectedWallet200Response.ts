/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransactionModel } from './TransactionModel';
import {
    TransactionModelFromJSON,
    TransactionModelFromJSONTyped,
    TransactionModelToJSON,
} from './TransactionModel';

/**
 * 
 * @export
 * @interface SetPlayerConnectedWallet200Response
 */
export interface SetPlayerConnectedWallet200Response {
    /**
     * 
     * @type {string}
     * @memberof SetPlayerConnectedWallet200Response
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SetPlayerConnectedWallet200Response
     */
    address?: string;
    /**
     * 
     * @type {TransactionModel}
     * @memberof SetPlayerConnectedWallet200Response
     */
    transaction?: TransactionModel;
}

/**
 * Check if a given object implements the SetPlayerConnectedWallet200Response interface.
 */
export function instanceOfSetPlayerConnectedWallet200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SetPlayerConnectedWallet200ResponseFromJSON(json: any): SetPlayerConnectedWallet200Response {
    return SetPlayerConnectedWallet200ResponseFromJSONTyped(json, false);
}

export function SetPlayerConnectedWallet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPlayerConnectedWallet200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'transaction': !exists(json, 'transaction') ? undefined : TransactionModelFromJSON(json['transaction']),
    };
}

export function SetPlayerConnectedWallet200ResponseToJSON(value?: SetPlayerConnectedWallet200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'address': value.address,
        'transaction': TransactionModelToJSON(value.transaction),
    };
}

