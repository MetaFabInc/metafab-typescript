/* tslint:disable */
/* eslint-disable */
/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransferContractOwnershipRequest
 */
export interface TransferContractOwnershipRequest {
    /**
     * A wallet address to assign as the new owner and administrator of the target smart contract.
     * @type {string}
     * @memberof TransferContractOwnershipRequest
     */
    ownerAddress: string;
}

/**
 * Check if a given object implements the TransferContractOwnershipRequest interface.
 */
export function instanceOfTransferContractOwnershipRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ownerAddress" in value;

    return isInstance;
}

export function TransferContractOwnershipRequestFromJSON(json: any): TransferContractOwnershipRequest {
    return TransferContractOwnershipRequestFromJSONTyped(json, false);
}

export function TransferContractOwnershipRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferContractOwnershipRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ownerAddress': json['ownerAddress'],
    };
}

export function TransferContractOwnershipRequestToJSON(value?: TransferContractOwnershipRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ownerAddress': value.ownerAddress,
    };
}

